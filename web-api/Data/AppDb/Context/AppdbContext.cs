// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using web_api.Data.AppDb.Model;

#nullable disable

namespace web_api.Data.AppDb.Context
{
    public partial class AppdbContext : DbContext
    {
        public AppdbContext()
        {
        }

        public AppdbContext(DbContextOptions<AppdbContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Cartera> Cartera { get; set; }
        public virtual DbSet<Cliente> Cliente { get; set; }
        public virtual DbSet<Cuenta> Cuenta { get; set; }
        public virtual DbSet<Precio> Precio { get; set; }
        public virtual DbSet<Producto> Producto { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS");

            modelBuilder.Entity<Cartera>(entity =>
            {
                entity.HasOne(d => d.Cuenta)
                    .WithMany(p => p.Cartera)
                    .HasForeignKey(d => d.CuentaId)
                    .HasConstraintName("FK__Cartera__CuentaI__3C69FB99");

                entity.HasOne(d => d.Producto)
                    .WithMany(p => p.Cartera)
                    .HasForeignKey(d => d.ProductoId)
                    .HasConstraintName("FK__Cartera__Product__3D5E1FD2");
            });

            modelBuilder.Entity<Cliente>(entity =>
            {
                entity.Property(e => e.Apellidos).IsUnicode(false);

                entity.Property(e => e.Direccion).IsUnicode(false);

                entity.Property(e => e.Nombre).IsUnicode(false);

                entity.Property(e => e.Telefono).IsUnicode(false);
            });

            modelBuilder.Entity<Cuenta>(entity =>
            {
                entity.Property(e => e.Nombre).IsUnicode(false);

                entity.Property(e => e.Numero).IsUnicode(false);

                entity.HasOne(d => d.Cliente)
                    .WithMany(p => p.Cuenta)
                    .HasForeignKey(d => d.ClienteId)
                    .HasConstraintName("FK__Cuenta__ClienteI__3E52440B");
            });

            modelBuilder.Entity<Precio>(entity =>
            {
                entity.HasOne(d => d.Producto)
                    .WithMany(p => p.Precio)
                    .HasForeignKey(d => d.ProductoId)
                    .HasConstraintName("FK__Precio__Producto__3F466844");
            });

            modelBuilder.Entity<Producto>(entity =>
            {
                entity.Property(e => e.Nombre).IsUnicode(false);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}